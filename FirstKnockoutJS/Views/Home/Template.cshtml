@model FirstKnockoutJS.Models.Contact

@{
    ViewBag.Title = "Template";
}
@using System.Web.Script.Serialization;

<h2>Template</h2>

<script src="../../Scripts/ContactViewModel.js" type="text/javascript"></script>

@{ var data = new JavaScriptSerializer().Serialize(Model); }

<script type="text/javascript">

var contactViewModel = new ContactViewModel(@Html.Raw(data));
var snapshotVM = contactViewModel;

    $(document).ready(function () {
        ko.applyBindings(contactViewModel);

        $("#revert").click(function() {
            ko.applyBindings(snapshotVM);
        });
    });

//    var ViewModel = function (first, last) {
//        this.firstName = ko.observable(first);
//        this.lastName = ko.observable(last);

//        this.fullName = ko.pureComputed(function () {
//            // Knockout tracks dependencies automatically. It knows that fullName depends on firstName and lastName, because these get called when evaluating fullName.
//            return this.firstName() + " " + this.lastName();
//        }, this);
//    };
//    $(document).ready(function () {
//        ko.applyBindings(new ViewModel("Planet", "Earth"));
//    });
    
</script>

<input data-bind="value: Name"></span>

<select data-bind="options: Titles, optionsText: 'Name', optionsValue: 'Id', optionsCaption: 'Choose...'"></select>

<button id="revert">Revert</button>

@*<p>First name: <input data-bind="value: firstName" /></p>
<p>Last name: <input data-bind="value: lastName" /></p>
<h2>Hello, <span data-bind="text: fullName"> </span>!</h2>*@